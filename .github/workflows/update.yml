name: Build & publish site

on:
  schedule:
    - cron: "0 7 * * *"     # tous les jours à 07:00 UTC (~09:00 Paris)
  workflow_dispatch: {}      # bouton manuel "Run workflow"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm install

      # Installe navigateurs + dépendances système de Playwright
      - name: Install Playwright dependencies
        run: npx playwright install --with-deps

      - name: Generate site (scrape + build HTML)
        env:
          MPG_EMAIL: ${{ secrets.MPG_EMAIL }}
          MPG_PASSWORD: ${{ secrets.MPG_PASSWORD }}
          MPG_ESL_FR: ${{ secrets.MPG_ESL_FR }}
          MPG_ESL_UK: ${{ secrets.MPG_ESL_UK }}
          MPG_ESL_ES: ${{ secrets.MPG_ESL_ES }}
          MPG_ESL_IT: ${{ secrets.MPG_ESL_IT }}
          MPG_AUTH_STATE_B64: ${{ secrets.MPG_AUTH_STATE_B64 }} # optionnel si tu l'ajoutes plus tard
        run: |
          mkdir -p docs
          node scripts/generate.mjs

      # Récupération des dumps Playwright pour debug (s'ils existent)
      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mpg-debug
          path: |
            dump-*.html
            screenshot-*.png
          if-no-files-found: ignore

      - name: Push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # se recaler sur la dernière version distante pour éviter "fetch first"
          git fetch origin main
          git reset --soft origin/main
          git add docs/ -A
          git commit -m "Update site [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main
